apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.name" . }}
  namespace: {{.Values.namespace}}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{.Values.replicas}}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      name: {{ include "chart.name" . }}
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
      - name: {{.Values.imagePullSecrets}}
      securityContext:
        runAsNonRoot: true
        runAsUser: {{.Values.securityContext.runAsUser}}
        runAsGroup: {{.Values.securityContext.runAsGroup}}
      containers:
      - name: {{.Chart.Name}}
        image: "{{.Values.image.repository}}:{{.Values.image.tag}}"
        imagePullPolicy: Always
        securityContext:
          privileged: {{.Values.securityContext.privileged}}
        ports:
        - name: http
          containerPort: {{.Values.service.targetPort}}
          protocol: TCP
        env:
        - name: "PORT"
          value: "{{.Values.service.targetPort}}"
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /api/v1/health/check
            port: {{.Values.service.targetPort}}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
        readinessProbe:
          httpGet:
            path: /api/v1/health/check
            port: {{.Values.service.targetPort}}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}

        


        
